条件  where ex:
    select *from student where id > 3;

比较运算符
    等于=
    大于>
    大于等于>=
    小于<
    小于等于<=
    不等于!=或<>
    查询编号大于3的学生
    select * from students where id>=3;

    查询姓名不是“黄蓉”的学生
    select * from students where sname!='黄蓉';

    查询没被删除的学生
    select * from students where isdelete=0;

逻辑运算符
    and or not ex:
    查询编码大于3的女同学
    select *from student where id > 3 and gender = 0;
    查询编号小于4或没被删除的学生
    SELECT *from student where id < 4 and isdelete = false;

模糊查询：
    like 
    %表示任意多个字符
    _表示一个任意字符
    查询姓黄的人
    SELECT * FROM student WHERE name LIKE '黄%';
    查询姓黄名字为一个的人
    SELECT * FROM student WHERE name LIKE '黄_';
    查询姓黄或叫靖的学生
    SELECT * from student WHERE name LIKE '黄%' OR name LIKE '%靖%'

范围查询：
    in表示在一个非连续的范围内
    查询编号是1或3或5的学生
    SELECT *from student WHERE id in(1,3,5);

    between ... and ...表示在一个连续的范围内
    查询学生是2至5的学生
    SELECT *from student WHERE id BETWEEN 2 AND 5;
    查询学生是2至5的学生
    SELECT *from student WHERE id BETWEEN 2 AND 5;
    查询学生是2至5的学生,男生，未被删除的
    SELECT *from student WHERE id BETWEEN 2 AND 5 AND gender=1 AND isdelete=0;

空判断，注意‘’和null是不同的 判断空用is null
    查询没填写地址和生日的学生
    SELECT *from student WHERE address is null and birthday is null;
    查询填写了地址的女生
    SELECT *from student WHERE address is not null and gender = 0;

优先级
    小括号，not，比较运算符，逻辑运算符
    and -> or 

=================================================================
聚合：
    count(*)表示计算总行数，括号中写星与列名，结果是相同的
    查询学生总数
    SELECT COUNT(*)from student;

    max(列)表示求此列的最大值
    求女生编号的最大值
    SELECT MAX(id) from student WHERE gender = 0;

    min(列)表示求此列的最小值
    查询未删除的学生最小编号
    SELECT MIN(id) from student WHERE isdelete=0;

    sum(列)表示求此列的和
    查询男生的编号之后
    SELECT SUM(id) FROM student WHERE gender=1;

    avg(列)表示求此列的平均值
    查询未删除女生的编号平均值
    SELECT AVG(id) FROM student WHERE gender =0 AND isdelete = 0 ;


===============================================================
分组：
    按照字段分组，表示此字段相同的数据会被放到一个组中
    分组后，只能查询出相同的数据列，对于有差异的数据列无法出现在结果集中
    可以对分组后的数据进行统计，做聚合运算
    select 列1,列2,聚合... from 表名 group by 列1,列2,列3...
    
    查询男女总数
    SELECT gender as 性别,count(*) as 总数 FROM student GROUP BY gender

    查询各城市的人数：
    SELECT address as hometown ,count(*)
    from student
    GROUP BY address;

分组后的数据筛选：
    语法：
    select 列1,列2,聚合... from 表名
    group by 列1,列2,列3...
    having 列1,...聚合...

    having后面的条件运算符与where的相同
    查询男生总人数两种方法
    1.SELECT count(*) FROM student WHERE gender=1;
    2.利用分组再聚合的方式
    SELECT gender as 性别,count(*)
    FROM student
    GROUP BY gender
    HAVING gender = 1;

对比where 和 having
    where是对from后面指定的表进行数据筛选，属于对原始数据的筛选
    having是对group by的结果进行筛选

排序：
    select * from 表名
    order by 列1 asc|desc,列2 asc|desc,...

    将行数据按照列1进行排序，如果某些行列1的值相同时，则按照列2排序，以此类推
    默认按照列值从小到大排列
    asc从小到大排列，即升序
    desc从大到小排序，即降序
    查询未删除男生学生信息，按学号降序

    SELECT * FROM student 
    WHERE gender = 1 AND isdelete=0
    ORDER BY id DESC; 


获取部分行：
    当数据量过大时，在一页中查看数据是一件非常麻烦的事情
    select * from 表名
    limit start,count

    从start开始，获取count条数据
    start索引从0开始

分页：
    获取未被删除的男生，从第三页开始，每页两个
    SELECT * FROM student 
    WHERE gender = 1 and isdelete =0
    LIMIT 3,2

















